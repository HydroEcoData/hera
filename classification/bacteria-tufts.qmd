---
title: "bacteria_tufts"
format: html
editor: visual
---

**Work in progress**

This could become an assessment and add to `catalogue` in future.

## Data

```{r}
library(tidyverse)
library(hera)
user <- Sys.info()["user"]
path <- paste0(
  "C:/Users/",
  user,
  "/OneDrive - Scottish Environment Protection Agency/DNA Data/Readiness Data/classification/latest-lims-data.csv"
)

lims_eco <- readr::read_csv(
  path
)
lims_eco$HAS_FLAGS...16 <- NULL
lims_eco$HAS_FLAGS...20 <- NULL


 # lims_eco <- readr::read_csv(
 #  "data\\2024-06-11-lims-data.csv"
 # )
 # 
lims_eco$SAMPLE_NUMBER <- lims_eco$ORIGINAL_SAMPLE  
lims_eco <- filter(lims_eco, ANALYSIS == "SEWAGE_FUNGUS")
 
 lims_eco <- hera::convert(lims_eco,
  convert_to = "hera",
  convert_from = "sepa_lims"
)
```

## Classify bacteria tufts

```{r}
tufts <- filter(lims_eco, parameter == "SEWAGE_FUNGUS")


# https://assets.publishing.service.gov.uk/media/5a7c2d65ed915d7d70d1d131/LIT_8165_d0e5a8.pdf
# Coverage
# Density
#         Occasional Widespread Extensive
# Trace   Moderate   Moderate   Poor
# Thin    Moderate   Poor       Poor
# Thick   Poor       Poor       Bad
# Massive Poor       Bad        Bad

sewage_fungus <- function(data) {
  purrr::map_df(split(data, data$sample_id), function(sample) {
  #  if (nrow(sample) < 2) {
  #    return(NULL)
  #  } else {
      sample <- dplyr::arrange(sample, question)
      sample$combined <- paste(sample$response, collapse = " ")
      row <- sample[1, ] # grab a row to use as template for tufts classification
      row <- dplyr::mutate(row,
        "question" = "Bacterial Tuft Class",
        "parameter" = "Bacterial Tuft"
      )
      row <- dplyr::mutate(row, "response" = dplyr::case_when(
        combined == "0%" ~ "High/Good",
        combined == "0% Trace" ~ "High/Good",
        combined == "0% Thin" ~ "High/Good",
        combined == "0% Thick" ~ "High/Good",
        combined == "<30% Trace" ~ "Moderate",
        combined == "30-60% Trace" ~ "Moderate",
        combined == ">60% Trace" ~ "Poor",
        combined == "<30% Thin" ~ "Moderate",
        combined == "30-60% Thin" ~ "Poor",
        combined == ">60% Thin" ~ "Poor",
        combined == "<30% Thick" ~ "Poor",
        combined == "30-60% Thick" ~ "Poor",
        combined == ">60% Thick" ~ "Bad",
        combined == "<30% Massive" ~ "Poor",
        combined == "30-60% Massive" ~ "Bad",
        combined == ">60% Massive" ~ "Bad"
      ))

      sample <- dplyr::bind_rows(sample, row)
      sample$combined <- NULL
      return(sample)
#    }
  })
}
tufts <- sewage_fungus(tufts)


```

## Find failing sites

```{r}
path2 <- paste0(
  "C:/Users/",
  user,
  "/OneDrive - Scottish Environment Protection Agency/DNA Data/Readiness Data/classification/2024-classification-diatoms-final.csv"
)

diatoms <- read.csv(file = path2,  check.names = FALSE)


diatoms <- filter(diatoms, `Location Code` %in% unique(tufts$location_id))
diatoms <- filter(diatoms, Class %in% c("Moderate", "Poor", "Bad"))
                
```

Compare against diatoms & macrophyte results?

```{r}

tufts <- filter(tufts, `question` == "Bacterial Tuft Class")
diatoms$`Location Code` <- as.character(diatoms$`Location Code`)
test <- left_join(diatoms, tufts, by = join_by(`Location Code` == `location_id`))
test <- select(test, "Location Code", "response", "Class", "sample_id", "date_taken")

test <- mutate(test, bacterial_status = case_when(
  response == "High/Good" ~ "2",
  response == "Moderate" ~ "3",
  response == "Poor" ~ "4",
  response == "Bad" ~ "5"
))

test <- mutate(test, diatom_status = case_when(
  Class == "High" ~ "1",
  Class == "Good" ~ "2",
  Class == "Moderate" ~ "3",
  Class == "Poor" ~ "4",
  Class == "Bad" ~ "5"
))

test$bacterial_status <- as.numeric(test$bacterial_status)
test$diatom_status <- as.numeric(test$diatom_status)

averagedresults <- test %>% 
  group_by(`Location Code`) %>%
  summarise(sample_count = n(),
            bacterial_status = mean(bacterial_status), 
            diatom_status = mean(diatom_status))

averagedresults <- mutate(averagedresults, bacterial_class = case_when(
  bacterial_status <= 2.5 ~ "High/Good",
  bacterial_status <= 3.5 ~ "Moderate",
  bacterial_status <= 4.5 ~ "Poor",
  bacterial_status >= 4.5 ~ "Bad"
))

averagedresults <- mutate(averagedresults, diatom_class = case_when(
  diatom_status == "1" ~ "High",
  diatom_status == "2" ~ "Good",
  diatom_status == "3" ~ "Moderate",
  diatom_status == "4" ~ "Poor",
  diatom_status == "5" ~ "Bad" 
))

averagedresults <- filter(averagedresults, bacterial_status > diatom_status)




test <- filter(test, bacterial_status > diatom_status)
test <- rename(test, bacterial_class = response)
test <- rename(test, diatom_class = Class)

#write.csv(test, "bacterial_tufts_overrides.csv")
```
